{"version":3,"sources":["components/Comment/Comment.module.scss","components/NewComment/NewComment.module.scss","components/Header/Header.module.scss","containers/Gallery/Gallery.module.scss","components/Photo/Photo.module.scss","components/UI/Spinner/Spinner.module.scss","components/UI/Input/Input.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/Footer/Footer.module.scss","components/Photo/Photo.js","components/Comment/Comment.js","components/UI/Spinner/Spinner.js","components/UI/Input/Input.js","components/NewComment/NewComment.js","containers/FullPhoto/FullPhoto.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","containers/Gallery/Gallery.js","components/Header/Header.js","components/Footer/Footer.js","containers/Layout/Layout.js","App.js","serviceWorker.js","index.js","containers/FullPhoto/FullPhoto.module.scss","components/UI/Modal/Modal.module.scss"],"names":["module","exports","Comment","Comment__time","Comment__text","Form","Submit","Header","Header__title","Gallery","Photo","Loader","load2","Input","Backdrop","Footer","_ref","clicked","url","react_default","a","createElement","role","tabIndex","className","classes","onClick","src","alt","date","text","moment","format","Spinner","label","value","onchange","id","htmlFor","type","onChange","placeholder","NewComment","state","comment","name","postDataHandler","e","preventDefault","_this","photoKey","props","data","axios","post","concat","then","response","console","log","alert","catch","error","inputCommentHandler","event","setState","prevState","Object","objectSpread","target","inputNameHandler","_this2","this","UI_Input_Input","Component","FullPhoto","_this$props","loadedPhoto","photo","UI_Spinner_Spinner","comments","values","map","components_Comment_Comment","key","FullPhoto__img","FullPhoto__wrap","FullPhoto__comments","components_NewComment_NewComment","defaultProps","show","aria-label","Modal","children","Fragment","UI_Backdrop_Backdrop","Closed","Modal__close","photos","selectedPhotoId","showModal","photoSelectedHandler","get","modalCloseHandler","_this3","_this$state","content","components_Photo_Photo","UI_Modal_Modal","containers_FullPhoto_FullPhoto","Layout","components_Header_Header","components_Footer_Footer","App","containers_Layout_Layout","containers_Gallery_Gallery","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dc091797.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"Comment_Comment__29EU2\",\"Comment__time\":\"Comment_Comment__time__3CWuv\",\"Comment__text\":\"Comment_Comment__text__3nI88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"NewComment_Form__3IqXv\",\"Submit\":\"NewComment_Submit__1wr6W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__26e58\",\"Header__title\":\"Header_Header__title__yExev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"Gallery_Gallery__s-wjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Photo\":\"Photo_Photo__3rKMZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3PNvY\",\"load2\":\"Spinner_load2__2TN0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2zjpg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1NMDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__2t_M9\"};","import React from 'react';\r\nimport { func, string } from 'prop-types';\r\nimport classes from './Photo.module.scss';\r\n\r\nconst Photo = ({clicked, url}) => {\r\n  return (\r\n    <div role='button' tabIndex='0' className={classes.Photo} onClick={clicked}>\r\n      <img src={url} alt=\"Фотография\"/>\r\n    </div>\r\n  )\r\n};\r\n\r\nPhoto.propTypes = {\r\n  clicked: func.isRequired,\r\n  url: string.isRequired,\r\n};\r\n\r\nexport default Photo;\r\n\r\n","import React from 'react';\r\nimport moment from \"moment\";\r\nimport { string, number } from 'prop-types';\r\nimport classes from './Comment.module.scss';\r\n\r\nconst Comment = ({date, text}) => {\r\n  return (\r\n    <div className={classes.Comment}>\r\n      <p className={classes.Comment__time}>\r\n        {moment(date)\r\n          .format('DD.MM.YYYY')}\r\n      </p>\r\n      <p className={classes.Comment__text}>{text}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nComment.propTypes = {\r\n  date: number.isRequired,\r\n  text: string.isRequired\r\n};\r\n\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\n\r\nimport classes from './Spinner.module.scss';\r\n\r\nconst Spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport { string, func, number } from 'prop-types';\r\nimport classes from './Input.module.scss';\r\n\r\n\r\nconst Input = ({label, value, onchange, id}) => (\r\n    <div>\r\n        <label htmlFor={id} className='Hidden'>{label}</label>\r\n        <input id={id} type=\"text\" className={classes.Input} value={value} onChange={onchange} placeholder={label}/>\r\n    </div>\r\n);\r\n\r\nInput.propTypes = {\r\n  label: string.isRequired,\r\n  value: string.isRequired,\r\n  onchange: func.isRequired,\r\n  id: number.isRequired\r\n};\r\n\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { number } from 'prop-types';\r\nimport classes from './NewComment.module.scss';\r\nimport Input from \"../UI/Input/Input\";\r\n\r\nclass NewComment extends Component {\r\n    state = {\r\n        comment: {\r\n            name: '',\r\n            comment: ''\r\n        }\r\n    };\r\n\r\n    postDataHandler = (e) => {\r\n        e.preventDefault();\r\n        const { comment } = this.state;\r\n        const { photoKey } = this.props;\r\n\r\n        const data = {\r\n            name: comment.name,\r\n            comment: comment.comment\r\n        };\r\n        axios.post(`https://boiling-refuge-66454.herokuapp.com/images/${  photoKey  }/comments`, data)\r\n            .then(response => {\r\n                console.log(response);\r\n                alert('Комментарий отправлен!')\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                alert('Не удалось отправить комментарий')\r\n            })\r\n        ;\r\n    };\r\n\r\n    inputCommentHandler = (event) => {\r\n        this.setState( prevState => ({\r\n            comment:\r\n                { ...prevState.comment, comment: event.target.value }\r\n        }) )\r\n    };\r\n\r\n    inputNameHandler = (event) => {\r\n        this.setState(prevState => ({\r\n            comment:\r\n                { ...prevState.comment, name: event.target.value}\r\n        }) )\r\n    };\r\n\r\n    render () {\r\n        const { comment } = this.state;\r\n\r\n        return (\r\n            <form className={classes.Form}>\r\n                <Input label='Ваше имя' id='username' value={comment.name} onchange={(event) => this.inputNameHandler(event)}/>\r\n                <Input label='Ваш комментарий' id='comment' value={comment.comment} onchange={(event) => this.inputCommentHandler(event)}/>\r\n                <button type='submit' className={classes.Submit} onClick={(e) => this.postDataHandler(e)}>Оставить комментарий</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nNewComment.propTypes = {\r\n    photoKey: number.isRequired,\r\n};\r\n\r\nexport default NewComment;\r\n","import React, {Component} from 'react';\r\nimport { shape, string, number } from 'prop-types';\r\nimport classes from './FullPhoto.module.scss';\r\nimport Comment from '../../components/Comment/Comment';\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport NewComment from '../../components/NewComment/NewComment';\r\n\r\nclass FullPhoto extends Component {\r\n    render() {\r\n        const { id, loadedPhoto } = this.props;\r\n        let photo = '';\r\n\r\n        if (id) {\r\n            photo = <Spinner/>;\r\n        }\r\n\r\n        if (loadedPhoto) {\r\n            const comments = Object.values(loadedPhoto.comments).map(comment => {\r\n                return <Comment key={comment.id} date={comment.date} text={comment.text}/>\r\n            });\r\n\r\n            photo = (\r\n                <div className={classes.FullPhoto}>\r\n                    <div className={classes.FullPhoto__img}>\r\n                        <img src={loadedPhoto.url} alt=\"\"/>\r\n                    </div>\r\n                    <div className={classes.FullPhoto__wrap}>\r\n                      <ul className={classes.FullPhoto__comments}>\r\n                          {comments}\r\n                      </ul>\r\n                      <NewComment photoKey={loadedPhoto.id}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            photo\r\n        )\r\n    }\r\n}\r\n\r\nFullPhoto.propTypes = {\r\n  id: number.isRequired,\r\n  loadedPhoto: shape(\r\n    {\r\n      url: string.isRequired,\r\n      id: number.isRequired\r\n    })\r\n};\r\n\r\nFullPhoto.defaultProps = {\r\n  loadedPhoto: {}\r\n};\r\n\r\nexport default FullPhoto;\r\n","import React from 'react';\r\nimport { bool, func } from 'prop-types';\r\nimport classes from './Backdrop.module.scss';\r\n\r\n\r\nconst Backdrop = ({show, clicked}) => (\r\n    show ? <div role='button' tabIndex='0' aria-label='Close popup' className={classes.Backdrop} onClick={clicked} /> : null\r\n);\r\n\r\nBackdrop.propTypes = {\r\n  show: bool.isRequired,\r\n  clicked: func.isRequired,\r\n};\r\n\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport { bool, func, node } from 'prop-types';\r\nimport classes from './Modal.module.scss';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst Modal = ({show, clicked, children}) => (\r\n    <>\r\n        <Backdrop show={show} clicked={clicked}/>\r\n        <div\r\n            className={show ? `${classes.Modal}` : `${classes.Modal} ${classes.Closed}`}\r\n        >\r\n            <button type='button' className={classes.Modal__close} onClick={clicked}>\r\n                <span className=\"Hidden\">Закрыть</span>\r\n            </button>\r\n            {children}\r\n        </div>\r\n    </>\r\n);\r\n\r\nModal.propTypes = {\r\n  show: bool.isRequired,\r\n  clicked: func.isRequired,\r\n  children: node.isRequired\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport classes from './Gallery.module.scss';\r\nimport Photo from \"../../components/Photo/Photo\";\r\nimport FullPhoto from \"../FullPhoto/FullPhoto\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nclass Gallery extends Component {\r\n    state = {\r\n        photos: [],\r\n        selectedPhotoId: '',\r\n        loadedPhoto: null,\r\n        showModal: false\r\n    };\r\n\r\n    componentDidMount () {\r\n        axios.get( 'https://boiling-refuge-66454.herokuapp.com/images' )\r\n            .then( response => {\r\n                const photos = response.data;\r\n                this.setState({photos});\r\n            } )\r\n            .catch(error => {\r\n                console.log(error);\r\n                alert('Что-то пошло не так')\r\n            });\r\n    }\r\n\r\n    photoSelectedHandler = (id) => {\r\n        this.setState({selectedPhotoId: id, showModal: true, loadedPhoto: null});\r\n         axios.get(`https://boiling-refuge-66454.herokuapp.com/images/${  id}`)\r\n                .then(response => {\r\n                    this.setState({loadedPhoto: response.data});\r\n                    this.setState({loadedPhoto: response.data});\r\n                })\r\n                 .catch(error => {\r\n                     console.log(error);\r\n                     alert('Что-то пошло не так')\r\n                 });\r\n    };\r\n\r\n    modalCloseHandler = () => {\r\n        this.setState({showModal: false, selectedPhotoId: null});\r\n    };\r\n\r\n    render () {\r\n        const { photos, showModal, loadedPhoto, selectedPhotoId } = this.state;\r\n        let content = <Spinner/>;\r\n\r\n        if (photos) {\r\n          content = photos.map(photo => {\r\n                return <Photo\r\n                    key={photo.id}\r\n                    url={photo.url}\r\n                    clicked={() => this.photoSelectedHandler(photo.id)} />;\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Gallery}>\r\n                {content}\r\n                <Modal show={showModal} clicked={this.modalCloseHandler}>\r\n                    <FullPhoto loadedPhoto={loadedPhoto} id={selectedPhotoId} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gallery;\r\n","import React from 'react';\r\nimport classes from './Header.module.scss';\r\n\r\nconst Header = () => (\r\n    <header className={classes.Header}>\r\n        <h1 className={classes.Header__title}>Gallery</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport classes from './Footer.module.scss';\r\n\r\nconst Footer = () => (\r\n    <footer className={classes.Footer}>\r\n        <p>© 2018-{moment().format('YYYY')}</p>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { node } from 'prop-types';\r\nimport Header from '../../components/Header/Header';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\nconst Layout = ({ children }) => (\r\n  <>\r\n    <Header/>\r\n    <main>\r\n      {children}\r\n    </main>\r\n    <Footer/>\r\n  </>\r\n);\r\n\r\nLayout.propTypes = {\r\n  children: node.isRequired\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport Gallery from './containers/Gallery/Gallery';\r\nimport Layout from './containers/Layout/Layout';\r\n\r\nconst App = () => (\r\n    <Layout>\r\n        <Gallery/>\r\n    </Layout>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FullPhoto\":\"FullPhoto_FullPhoto__2Jf5v\",\"FullPhoto__img\":\"FullPhoto_FullPhoto__img__3DIXJ\",\"FullPhoto__wrap\":\"FullPhoto_FullPhoto__wrap__3NdZU\",\"FullPhoto__comments\":\"FullPhoto_FullPhoto__comments__3JMpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3cf6z\",\"Modal__close\":\"Modal_Modal__close__1n2ve\",\"Closed\":\"Modal_Closed__21QYZ\"};"],"sourceRoot":""}